// <auto-generated />
using System;
using BancaBP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BancaBP.Data.Migrations
{
    [DbContext(typeof(corebancarioContext))]
    partial class corebancarioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BancaBP.Models.Cliente", b =>
                {
                    b.Property<int>("IntCliecodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("INT_CLIECODIGO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VchClieapellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("VCH_CLIEAPELLIDO");

                    b.Property<string>("VchCliecedula")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("VCH_CLIECEDULA");

                    b.Property<string>("VchCliedireccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("VCH_CLIEDIRECCION");

                    b.Property<string>("VchClieemail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("VCH_CLIEEMAIL");

                    b.Property<string>("VchClienombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("VCH_CLIENOMBRE");

                    b.Property<string>("VchClietelefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("VCH_CLIETELEFONO");

                    b.HasKey("IntCliecodigo")
                        .IsClustered(false);

                    b.ToTable("CLIENTE");
                });

            modelBuilder.Entity("BancaBP.Models.Cuenta", b =>
                {
                    b.Property<int>("IntCuencodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("INT_CUENCODIGO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("DecCuensaldo")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("DEC_CUENSALDO");

                    b.Property<DateTime?>("DttCuenfechacreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("DTT_CUENFECHACREACION");

                    b.Property<int>("IntCliecodigo")
                        .HasColumnType("int")
                        .HasColumnName("INT_CLIECODIGO");

                    b.Property<string>("VchCuennumero")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("VCH_CUENNUMERO");

                    b.Property<string>("VchCuentipo")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("VCH_CUENTIPO");

                    b.HasKey("IntCuencodigo")
                        .IsClustered(false);

                    b.HasIndex(new[] { "IntCliecodigo" }, "RELATIONSHIP_1_FK");

                    b.ToTable("CUENTA");
                });

            modelBuilder.Entity("BancaBP.Models.Movimiento", b =>
                {
                    b.Property<int>("IntMovicodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("INT_MOVICODIGO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("DecMovisaldofinal")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("DEC_MOVISALDOFINAL");

                    b.Property<decimal?>("DecMovivalor")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("DEC_MOVIVALOR");

                    b.Property<DateTime?>("DttMovifecha")
                        .HasColumnType("datetime")
                        .HasColumnName("DTT_MOVIFECHA");

                    b.Property<int>("IntCuencodigo")
                        .HasColumnType("int")
                        .HasColumnName("INT_CUENCODIGO");

                    b.Property<string>("VchMovicuentdest")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("VCH_MOVICUENTDEST");

                    b.Property<string>("VchMovicuentorig")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("VCH_MOVICUENTORIG");

                    b.Property<string>("VchMovitipo")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("char(64)")
                        .HasColumnName("VCH_MOVITIPO")
                        .IsFixedLength(true);

                    b.HasKey("IntMovicodigo")
                        .IsClustered(false);

                    b.HasIndex(new[] { "IntCuencodigo" }, "RELATIONSHIP_2_FK");

                    b.ToTable("MOVIMIENTO");
                });

            modelBuilder.Entity("BancaBP.Models.Usuario", b =>
                {
                    b.Property<int>("IntUsucodigo")
                        .HasColumnType("int")
                        .HasColumnName("INT_USUCODIGO");

                    b.Property<string>("VchRol")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("VCH_ROL");

                    b.Property<string>("VchUsuapellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("VCH_USUAPELLIDO");

                    b.Property<string>("VchUsucedula")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("VCH_USUCEDULA");

                    b.Property<string>("VchUsudireccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("VCH_USUDIRECCION");

                    b.Property<string>("VchUsuemail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("VCH_USUEMAIL");

                    b.Property<string>("VchUsunombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("VCH_USUNOMBRE");

                    b.Property<string>("VchUsupassword")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("VCH_USUPASSWORD");

                    b.Property<string>("VchUsutelefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("VCH_USUTELEFONO");

                    b.Property<string>("VchUsuusuario")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("VCH_USUUSUARIO");

                    b.HasKey("IntUsucodigo")
                        .IsClustered(false);

                    b.ToTable("USUARIO");
                });

            modelBuilder.Entity("BancaBP.Models.Cuenta", b =>
                {
                    b.HasOne("BancaBP.Models.Cliente", "IntCliecodigoNavigation")
                        .WithMany("Cuenta")
                        .HasForeignKey("IntCliecodigo")
                        .HasConstraintName("FK_CUENTA_RELATIONS_CLIENTE")
                        .IsRequired();

                    b.Navigation("IntCliecodigoNavigation");
                });

            modelBuilder.Entity("BancaBP.Models.Movimiento", b =>
                {
                    b.HasOne("BancaBP.Models.Cuenta", "IntCuencodigoNavigation")
                        .WithMany("Movimientos")
                        .HasForeignKey("IntCuencodigo")
                        .HasConstraintName("FK_MOVIMIEN_RELATIONS_CUENTA")
                        .IsRequired();

                    b.Navigation("IntCuencodigoNavigation");
                });

            modelBuilder.Entity("BancaBP.Models.Cliente", b =>
                {
                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("BancaBP.Models.Cuenta", b =>
                {
                    b.Navigation("Movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
